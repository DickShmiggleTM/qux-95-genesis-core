{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QUX-95 Neural-Cybernetic Intent Graph",
  "description": "Schema documenting system-level behaviors, state transitions, and intent relationships between neural-cybernetic modules",
  "type": "object",
  "properties": {
    "version": {
      "type": "string",
      "description": "Schema version for compatibility tracking",
      "default": "1.0.0"
    },
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "Last update timestamp of the intent graph"
    },
    "systemState": {
      "type": "object",
      "description": "Current state of the cognitive system",
      "properties": {
        "activeModules": {
          "type": "array",
          "description": "Currently active neural-cybernetic modules",
          "items": {
            "type": "string",
            "enum": [
              "neuralMeshNetwork",
              "quantumDecisionEngine",
              "biomimeticRepairNetwork",
              "temporalCodeAnalyzer",
              "emergentMind",
              "holographicMemory",
              "symbioticIDE"
            ]
          }
        },
        "systemEntropy": {
          "type": "number",
          "description": "Current entropy level of the system (0-1)",
          "minimum": 0,
          "maximum": 1
        },
        "globalConfidence": {
          "type": "number",
          "description": "Global confidence level in system operations (0-1)",
          "minimum": 0,
          "maximum": 1
        },
        "consciousness": {
          "type": "number",
          "description": "Emergent consciousness level (0-1)",
          "minimum": 0,
          "maximum": 1
        },
        "adaptiveState": {
          "type": "string",
          "description": "Current adaptive state of the system",
          "enum": [
            "exploring",
            "exploiting",
            "learning",
            "optimizing",
            "recovering",
            "bootstrapping"
          ]
        }
      },
      "required": ["activeModules", "systemEntropy", "globalConfidence"]
    },
    "modules": {
      "type": "object",
      "description": "Configuration and state of individual neural-cybernetic modules",
      "properties": {
        "neuralMeshNetwork": {
          "type": "object",
          "properties": {
            "activeNodes": {
              "type": "integer",
              "description": "Number of active nodes in the neural mesh"
            },
            "topologyMetrics": {
              "type": "object",
              "properties": {
                "entropy": {
                  "type": "number",
                  "description": "Entropy of the network topology"
                },
                "clusteringCoefficient": {
                  "type": "number",
                  "description": "Clustering coefficient of the network"
                },
                "smallWorldIndex": {
                  "type": "number",
                  "description": "Small-world index of the network"
                }
              }
            },
            "evolutionParameters": {
              "type": "object",
              "properties": {
                "mutationRate": {
                  "type": "number",
                  "description": "Rate of topology mutation"
                },
                "adaptationSpeed": {
                  "type": "number",
                  "description": "Speed of adaptation to new patterns"
                }
              }
            }
          }
        },
        "quantumDecisionEngine": {
          "type": "object",
          "properties": {
            "activeStates": {
              "type": "integer",
              "description": "Number of active quantum states"
            },
            "superpositionDepth": {
              "type": "number",
              "description": "Depth of superposition states"
            },
            "interferenceStrength": {
              "type": "number",
              "description": "Strength of quantum interference effects"
            },
            "entangledPathways": {
              "type": "integer",
              "description": "Number of entangled decision pathways"
            }
          }
        },
        "biomimeticRepairNetwork": {
          "type": "object",
          "properties": {
            "activeAnomalies": {
              "type": "integer",
              "description": "Number of active code anomalies"
            },
            "repairStrategies": {
              "type": "integer",
              "description": "Number of available repair strategies"
            },
            "healingRate": {
              "type": "number",
              "description": "Current healing rate of the system"
            },
            "repairStats": {
              "type": "object",
              "properties": {
                "successRate": {
                  "type": "number",
                  "description": "Success rate of repairs"
                },
                "meanTimeToRepair": {
                  "type": "number",
                  "description": "Mean time to repair anomalies (ms)"
                }
              }
            }
          }
        },
        "temporalCodeAnalyzer": {
          "type": "object",
          "properties": {
            "timelineNodes": {
              "type": "integer",
              "description": "Number of timeline nodes"
            },
            "divergencePoints": {
              "type": "integer",
              "description": "Number of detected divergence points"
            },
            "temporalDepth": {
              "type": "integer",
              "description": "Depth of temporal analysis"
            },
            "predictiveConfidence": {
              "type": "number",
              "description": "Confidence in predictive timelines"
            }
          }
        },
        "emergentMind": {
          "type": "object",
          "properties": {
            "activeBeliefs": {
              "type": "integer",
              "description": "Number of active beliefs"
            },
            "goals": {
              "type": "array",
              "description": "Current system goals",
              "items": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "priority": {
                    "type": "number"
                  },
                  "progress": {
                    "type": "number"
                  }
                }
              }
            },
            "reflectionStats": {
              "type": "object",
              "properties": {
                "coherence": {
                  "type": "number",
                  "description": "System coherence"
                },
                "effectiveness": {
                  "type": "number",
                  "description": "Goal effectiveness"
                },
                "adaptability": {
                  "type": "number",
                  "description": "System adaptability"
                }
              }
            }
          }
        },
        "holographicMemory": {
          "type": "object",
          "properties": {
            "memories": {
              "type": "integer",
              "description": "Number of stored memories"
            },
            "recallAccuracy": {
              "type": "number",
              "description": "Accuracy of memory recall"
            },
            "faultTolerance": {
              "type": "number",
              "description": "Degree of fault tolerance"
            },
            "phaseConjugates": {
              "type": "integer",
              "description": "Number of phase conjugates for recovery"
            }
          }
        },
        "symbioticIDE": {
          "type": "object",
          "properties": {
            "interactions": {
              "type": "integer",
              "description": "Number of developer interactions recorded"
            },
            "adaptations": {
              "type": "integer",
              "description": "Number of adaptations applied"
            },
            "developerExpertise": {
              "type": "object",
              "additionalProperties": {
                "type": "number",
                "description": "Expertise level in a specific domain (0-1)"
              }
            },
            "coEvolutionRate": {
              "type": "number",
              "description": "Rate of co-evolution with developer"
            }
          }
        }
      }
    },
    "intents": {
      "type": "array",
      "description": "System-level intents that drive module interactions",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the intent"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for the intent"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the intent"
          },
          "source": {
            "type": "string",
            "description": "Module that originates this intent"
          },
          "targets": {
            "type": "array",
            "description": "Modules affected by this intent",
            "items": {
              "type": "string"
            }
          },
          "preconditions": {
            "type": "array",
            "description": "Conditions that must be true for intent to be active",
            "items": {
              "type": "object",
              "properties": {
                "property": {
                  "type": "string",
                  "description": "System property to check"
                },
                "operator": {
                  "type": "string",
                  "enum": ["==", "!=", ">", "<", ">=", "<=", "contains"]
                },
                "value": {
                  "description": "Value to compare against"
                }
              }
            }
          },
          "effects": {
            "type": "array",
            "description": "Effects of the intent being satisfied",
            "items": {
              "type": "object",
              "properties": {
                "property": {
                  "type": "string",
                  "description": "System property affected"
                },
                "operation": {
                  "type": "string",
                  "enum": ["set", "increment", "decrement", "multiply", "divide", "toggle"]
                },
                "value": {
                  "description": "Value for the operation"
                }
              }
            }
          },
          "priority": {
            "type": "number",
            "description": "Priority level of this intent (0-10)",
            "minimum": 0,
            "maximum": 10
          },
          "conflictsWith": {
            "type": "array",
            "description": "Other intents this may conflict with",
            "items": {
              "type": "string"
            }
          }
        },
        "required": ["id", "name", "description", "source", "targets"]
      }
    },
    "stateTransitions": {
      "type": "array",
      "description": "Possible state transitions in the system",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the transition"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for the transition"
          },
          "fromState": {
            "type": "string",
            "description": "Initial state",
            "enum": [
              "exploring",
              "exploiting",
              "learning",
              "optimizing",
              "recovering",
              "bootstrapping",
              "any"
            ]
          },
          "toState": {
            "type": "string",
            "description": "Target state",
            "enum": [
              "exploring",
              "exploiting",
              "learning",
              "optimizing",
              "recovering",
              "bootstrapping"
            ]
          },
          "trigger": {
            "type": "object",
            "description": "Event or condition that triggers this transition",
            "properties": {
              "type": {
                "type": "string",
                "enum": ["event", "condition", "temporal", "user"]
              },
              "details": {
                "type": "object",
                "description": "Specific details of the trigger"
              }
            }
          },
          "probability": {
            "type": "number",
            "description": "Probability of this transition occurring given the trigger (0-1)",
            "minimum": 0,
            "maximum": 1
          },
          "effects": {
            "type": "array",
            "description": "Side effects of this transition",
            "items": {
              "type": "object"
            }
          }
        },
        "required": ["id", "fromState", "toState"]
      }
    },
    "eventTypes": {
      "type": "array",
      "description": "Types of events that can flow through the cognitive system",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the event type"
          },
          "schema": {
            "type": "object",
            "description": "Schema for the event data"
          },
          "sources": {
            "type": "array",
            "description": "Modules that can emit this event",
            "items": {
              "type": "string"
            }
          },
          "handlers": {
            "type": "array",
            "description": "Modules that handle this event",
            "items": {
              "type": "string"
            }
          },
          "priority": {
            "type": "number",
            "description": "Default priority for this event type",
            "minimum": 0,
            "maximum": 10
          }
        }
      }
    },
    "cognitiveProcesses": {
      "type": "array",
      "description": "Higher-order cognitive processes that span multiple modules",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier for the process"
          },
          "name": {
            "type": "string",
            "description": "Human-readable name for the process"
          },
          "description": {
            "type": "string",
            "description": "Detailed description of the process"
          },
          "modules": {
            "type": "array",
            "description": "Modules involved in this process",
            "items": {
              "type": "string"
            }
          },
          "dataFlows": {
            "type": "array",
            "description": "Data flows between modules in this process",
            "items": {
              "type": "object",
              "properties": {
                "from": {
                  "type": "string",
                  "description": "Source module"
                },
                "to": {
                  "type": "string",
                  "description": "Target module"
                },
                "dataType": {
                  "type": "string",
                  "description": "Type of data being transferred"
                },
                "transformation": {
                  "type": "string",
                  "description": "Any transformation applied to the data"
                }
              }
            }
          },
          "emergentProperties": {
            "type": "array",
            "description": "Emergent properties that arise from this process",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "instanceData": {
      "type": "object",
      "description": "Current instance data for the running system",
      "properties": {
        "activeIntents": {
          "type": "array",
          "description": "Currently active intents",
          "items": {
            "type": "string"
          }
        },
        "recentTransitions": {
          "type": "array",
          "description": "Recent state transitions",
          "items": {
            "type": "object",
            "properties": {
              "transitionId": {
                "type": "string"
              },
              "timestamp": {
                "type": "string",
                "format": "date-time"
              }
            }
          }
        },
        "performanceMetrics": {
          "type": "object",
          "description": "Current performance metrics"
        },
        "activeGoals": {
          "type": "array",
          "description": "Currently active system goals",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "required": ["version", "timestamp", "systemState", "modules", "intents"],
  "examples": [
    {
      "version": "1.0.0",
      "timestamp": "2025-04-12T03:45:00Z",
      "systemState": {
        "activeModules": [
          "neuralMeshNetwork",
          "quantumDecisionEngine",
          "holographicMemory",
          "emergentMind",
          "symbioticIDE"
        ],
        "systemEntropy": 0.42,
        "globalConfidence": 0.85,
        "consciousness": 0.76,
        "adaptiveState": "learning"
      },
      "modules": {
        "neuralMeshNetwork": {
          "activeNodes": 346,
          "topologyMetrics": {
            "entropy": 0.65,
            "clusteringCoefficient": 0.72,
            "smallWorldIndex": 1.35
          },
          "evolutionParameters": {
            "mutationRate": 0.03,
            "adaptationSpeed": 0.4
          }
        },
        "quantumDecisionEngine": {
          "activeStates": 128,
          "superpositionDepth": 4,
          "interferenceStrength": 0.3,
          "entangledPathways": 24
        },
        "emergentMind": {
          "activeBeliefs": 26,
          "goals": [
            {
              "description": "Enhance developer productivity",
              "priority": 9,
              "progress": 0.67
            },
            {
              "description": "Maintain system integrity",
              "priority": 8,
              "progress": 0.85
            }
          ],
          "reflectionStats": {
            "coherence": 0.82,
            "effectiveness": 0.78,
            "adaptability": 0.75
          }
        }
      },
      "intents": [
        {
          "id": "enhance_code_quality",
          "name": "Enhance Code Quality",
          "description": "Improve code quality through automated refactoring and best practices",
          "source": "emergentMind",
          "targets": ["biomimeticRepairNetwork", "temporalCodeAnalyzer"],
          "priority": 8,
          "preconditions": [
            {
              "property": "systemState.adaptiveState",
              "operator": "==",
              "value": "optimizing"
            }
          ],
          "effects": [
            {
              "property": "modules.biomimeticRepairNetwork.healingRate",
              "operation": "increment",
              "value": 0.1
            }
          ]
        }
      ],
      "stateTransitions": [
        {
          "id": "entropy_threshold_exceeded",
          "name": "Entropy Threshold Exceeded",
          "fromState": "exploiting",
          "toState": "exploring",
          "trigger": {
            "type": "condition",
            "details": {
              "property": "systemState.systemEntropy",
              "operator": ">",
              "value": 0.8
            }
          },
          "probability": 0.9
        }
      ]
    }
  ]
}
